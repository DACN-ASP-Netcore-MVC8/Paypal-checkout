@{
    ViewData["Title"] = "Chat";
    var receiverId = ViewBag.ReceiverId as string;
}
<style>
   
    .chat-list {
        padding: 0;
        font-size: .8rem;
    }

        .chat-list li {
            margin-bottom: 10px;
            overflow: auto;
            color: #ffffff;
        }

        .chat-list .chat-img {
            float: left;
            width: 48px;
        }

            .chat-list .chat-img img {
                -webkit-border-radius: 50px;
                -moz-border-radius: 50px;
                border-radius: 50px;
                width: 100%;
            }

        .chat-list .chat-message {
            -webkit-border-radius: 50px;
            -moz-border-radius: 50px;
            border-radius: 50px;
            background: #5a99ee;
            display: inline-block;
            padding: 10px 20px;
            position: relative;
        }

            .chat-list .chat-message:before {
                content: "";
                position: absolute;
                top: 15px;
                width: 0;
                height: 0;
            }

            .chat-list .chat-message h5 {
                margin: 0 0 5px 0;
                font-weight: 600;
                line-height: 100%;
                font-size: .9rem;
            }

            .chat-list .chat-message p {
                line-height: 18px;
                margin: 0;
                padding: 0;
            }

        .chat-list .chat-body {
            margin-left: 20px;
            float: left;
            width: 70%;
        }

        .chat-list .in .chat-message:before {
            left: -12px;
            border-bottom: 20px solid transparent;
            border-right: 20px solid #5a99ee;
        }

        .chat-list .out .chat-img {
            float: right;
        }

        .chat-list .out .chat-body {
            float: right;
            margin-right: 20px;
            text-align: right;
        }

        .chat-list .out .chat-message {
            background: #fc6d4c;
        }

            .chat-list .out .chat-message:before {
                right: -12px;
                border-bottom: 20px solid transparent;
                border-left: 20px solid #fc6d4c;
            }

    .card .card-header:first-child {
        -webkit-border-radius: 0.3rem 0.3rem 0 0;
        -moz-border-radius: 0.3rem 0.3rem 0 0;
        border-radius: 0.3rem 0.3rem 0 0;
    }

    .card .card-header {
        background: #17202b;
        border: 0;
        font-size: 1rem;
        padding: .65rem 1rem;
        position: relative;
        font-weight: 600;
        color: #ffffff;
    }

    .content {
        margin-top: 40px;
    }
</style>

<h1>Chat with @receiverId</h1>

<div class="container content">
    <div class="row justify-content-center">
        <div class="col-xl-8 col-lg-10 col-md-12 col-sm-12">
            <div class="card">
                <div class="card-header">Chat</div>
                <div class="card-body height3">
                    <ul class="chat-list" id="messagesList">
                        <!-- Messages will be dynamically appended here -->
                    </ul>
                </div>
                <div class="card-footer text-muted d-flex align-items-center p-3">
                    <input type="text" class="form-control form-control-lg" id="messageInput" placeholder="Type your message...">
                    <button class="btn btn-primary btn-lg ms-2" id="sendButton">Send</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chathub")
                .build();

            // Receiving messages from the server
            connection.on("ReceiveMessage", function (senderId, message, isSender) {
                const li = document.createElement("li");
                li.className = isSender ? 'out' : 'in';

                li.innerHTML = `
                            <div class="chat-img">
                                <img alt="Avatar" src="${isSender ? 'https://bootdey.com/img/Content/avatar/avatar6.png' : 'https://bootdey.com/img/Content/avatar/avatar1.png'}">
                            </div>
                            <div class="chat-body">
                                <div class="chat-message">
                                    <h5>${senderId}</h5>
                                    <p>${message}</p>
                                </div>
                            </div>`;
                document.getElementById("messagesList").appendChild(li);
            });

            // Start the SignalR connection
            connection.start().catch(err => console.error(err.toString()));

            // Send message event
            document.getElementById("sendButton").addEventListener("click", function () {
                const message = document.getElementById("messageInput").value;
                const senderId = "@User.Identity.Name"; // Current user's ID
                const receiverId = "@receiverId"; // Receiver's ID from ViewBag

                if (message.trim() !== "") {
                    connection.invoke("SendMessage", senderId, receiverId, message)
                        .catch(err => console.error(err.toString()));

                    document.getElementById("messageInput").value = "";
                }
            });
        });
    </script>
}
